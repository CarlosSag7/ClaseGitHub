

cat /ds/work/desa/ll.txt


caso1
para el uso de un contador se agrego un column generator con valor inicial 1 incremento 1 , luego ese valor se llev  a un agregator para usar  count rows con campo CONTADOR, luego un inner join para cruzar por los campos agrupados canal,tipocanal,codcuentabt y rescatar los demas campos que el agregator no puede traer.

caso2
Un campo CODNUMEROTARJETA tiene 2 salidas pero con diferente nombres, se usa modify y a la vez se  realiza un substring de varchar (50)  a varchar (19)

NROTARJETA1= CODNUMEROTARJETA
NROTARJETA= CODNUMEROTARJETA

CODNUMEROTARJETA:string[max=19]=string_trim[" ",end](CODNUMEROTARJETA)  elimina espacios en blanco  al final antes transformando varchar (50) a varchar(19)




WITH TMP_FECHAMAX AS
(SELECT MAX(cod_fecha_bk) COD_FECHA_BK FROM dwbme_own.FT_OTRAS_ENTIDADES)
SELECT S1.* FROM dwbme_own.FT_OTRAS_ENTIDADES S1 
JOIN TMP_FECHAMAX S2 ON S1.COD_FECHA_BK=S2.COD_FECHA_BK

SELECT
TO_NUMBER(TO_CHAR(cod_fecha_bk,'DDMMYYYY'))as DES
 from dwbme_own.FT_OTRAS_ENTIDADES

 C mo leer m ltiples archivos usando un solo trabajo DataStage? DK  

Este art culo proporciona diferentes formas de leer m ltiples archivos (que tienen metadatos iguales o diferentes) usando un solo trabajo . DK  

Primero averig e si los metadatos de los archivos son iguales o diferentes. 
Si los archivos tienen los mismos metadatos DK  

M todo 1 : nombres de archivo espec ficos: en la etapa secuencial, adjunte los metadatos a la etapa secuencial. En sus propiedades, seleccione M todo de lectura como 'Archivos espec ficos'. Luego agregue todos los archivos seleccionando la propiedad 'archivo' de las 'propiedades disponibles para agregar'.
Se ver  a continuaci n:
Archivo = /home/myFile1.txt
Archivo = /home/myFile2.txt
Archivo = /home/myFile3.txt
M todo de lectura = Archivo (s) espec fico (s) DK  

M todo 2 : uso de comodines: en el m todo anterior, en lugar de proporcionar nombres de archivo individuales, tambi n se puede proporcionar un patr n de nombres de archivo. Use el M todo de lectura como 'Patr n de archivo'.
Luego, en el campo de patr n de archivo, coloque cualquier comando v lido de Unix similar al siguiente:
FileName_? (seleccionando todos los archivos como FileName_1, FileName_2)
FileName_ * (seleccionando todos los archivos como FileName_1, FileName_12.txt, FileName_.txt) DK  

M todo 3 : uso de una expresi n de shell v lida (sintaxis de shell Bourne): si hay 5 archivos con un patr n similar (como myFile * .txt) y solo se necesitan leer tres de estos cinco archivos, entonces se puede usar este m todo. Use el M todo de lectura como 'Patr n de archivo' y proporcione un comando de shell v lido como el siguiente en el campo Patr n de archivo - DK  
`ls /home/myFile*.txt | cabeza -3`             

M todo 4 : uso del trabajo de instancias m ltiples: para este m todo, habilite "Permitir instancias m ltiples" en las Propiedades del trabajo. Agregue un par metro de trabajo en la etapa de archivo secuencial donde debe definirse el archivo de entrada. DK  
Durante la ejecuci n, se debe pasar un valor al par metro del trabajo. Aqu  pasa la ruta del archivo de entrada colocada en diferentes directorios. Ejecute el trabajo para todos los archivos m ltiples usando el mismo trabajo pasando la ruta del archivo de entrada para cada ejecuci n.
Se debe proporcionar una identificaci n de invocaci n para cada ejecuci n. Esta identificaci n indica el no. de veces el trabajo ha sido ejecutado. Esto se puede observar en el registro de trabajo. DK  

M todo 5 : otra opci n es tener una etapa de comando en la secuencia de trabajo que lea el nombre del archivo. Y luego pase la salida de este comando ($ CommandOutput) al par metro de nombre de archivo de la etapa de archivo secuencial. DK  


Si los archivos tienen metadatos diferentes (la estructura no es la misma)
Si los archivos tienen metadatos diferentes, entonces deber a usarse la opci n de archivo de esquema. La opci n de archivo de esquema est  disponible en la etapa de archivo secuencial en 'Propiedades para agregar' en el men  Opciones. Proporciona al usuario una opci n para proporcionar los detalles de los metadatos del archivo, su estructura de columnas y su estructura de archivos mediante un archivo de esquema. DK  
Uno solo necesita asegurarse de que el archivo y su esquema deben estar de acuerdo entre s . Tambi n aseg rese de que la propiedad RCP (Propagaci n de columna en tiempo de ejecuci n) del trabajo est  establecida como Verdadera (esto garantizar  que los metadatos de la columna se pasen a otras etapas). DK  

M todo 1 : uso de par metros: creaci n de una etapa secuencial de trabajo paralelo (con la propiedad del archivo de esquema activa). Agregue tres par metros de trabajo: pFilePath, pFileName, pSchemaPath. En la etapa secuencial, agregue pFilePath y pFileName a la propiedad del archivo de la etapa. Agregue la propiedad de nombre de esquema de etapa, agregue pSchemaName a la propiedad de esquema.
Luego, mientras ejecuta el trabajo, proporcione el valor apropiado de los tres par metros. DK  

M todo 2 : uso del trabajo de varias instancias: en el m todo anterior, simplemente configure la propiedad de m ltiples instancias del trabajo como verdadera y ejecute el trabajo para varios conjuntos de archivos y su esquema.

M todo 3 : uso del bucle en la secuencia de trabajo: de manera similar, el trabajo anterior se puede usar en una secuencia de trabajo donde se ejecuta usando un bucle. Aqu  cada iteraci n del bucle procesar  un archivo. DK  
Esto se puede hacer m s f cil de ejecutar usando una Actividad UserVariables y asignando la lista de archivos y archivos de esquema en las variables creadas all 